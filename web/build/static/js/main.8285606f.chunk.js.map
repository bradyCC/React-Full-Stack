{"version":3,"sources":["views/main/Main.jsx","views/login/Login.jsx","components/logo/Logo.jsx","views/register/Register.jsx","redux/reducers/counterReducer.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","router/index.js","serviceWorker.js","index.js","components/logo/logo.png"],"names":["Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Component","Login","Logo","className","src","logo","alt","Register","handleChange","prop","val","setState","defineProperty","submit","toast","loading","console","log","setTimeout","hide","toLogin","history","replace","username","password","repassword","type","_this2","nav_bar","logo_Logo","wing_blank","list","input_item","onChange","Item","es_radio","checked","style","marginLeft","white_space","es_button","onClick","defaultState","test","combineReducers","counterReducer","arguments","length","undefined","action","objectSpread","payload","middleware","thunk","store","createStore","reducers","composeWithDevTools","applyMiddleware","apply","AppRouter","es","react_router_dom","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8285606f.chunk.js","sourcesContent":["/**\n * Created by brady on 2019-06-22.\n */\n\nimport React, { Component } from 'react'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div>首页</div>\n    );\n  }\n}\n\nexport default Main\n","/**\n * Created by brady on 2019-06-22.\n */\n\nimport React, {Component} from 'react'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div>登录</div>\n    );\n  }\n}\n\nexport default Login\n","/**\n * Created by brady on 2019-06-22.\n */\n\nimport React, {Component} from 'react'\nimport logo from './logo.png'\nimport './logo.less'\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div className=\"logo\">\n        <img src={logo} alt=\"\" className=\"logo-img\" />\n      </div>\n    );\n  }\n}\n\nexport default Logo\n","/**\n * Created by brady on 2019-06-22.\n */\nimport React, {Component} from 'react'\nimport { NavBar, WingBlank, WhiteSpace, List, InputItem, Radio, Button, Toast } from 'antd-mobile'\nimport Logo from '@/components/logo/Logo'\n\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '', // 用户名\n      password: '', // 密码\n      repassword: '', // 确认密码\n      type: '1', // 用户类型\n    }\n  }\n\n  // 数据改变时执行\n  handleChange = (prop, val) => {\n    // 更新状态\n    this.setState({\n      [prop]: val\n    })\n  }\n\n  // 注册提交\n  submit = () => {\n    Toast.loading('注册中', 0)\n\n    console.log(this.state)\n\n    setTimeout(() => {\n      Toast.hide()\n    }, 5000)\n  }\n\n  // 已有账户，跳转至登录页\n  toLogin = () => {\n    this.props.history.replace('/login')\n  }\n\n  render() {\n    const { type } = this.state\n    return (\n      <div>\n        <NavBar>硅谷直聘</NavBar>\n        <Logo></Logo>\n        <WingBlank>\n          <List>\n            <InputItem onChange={ val => this.handleChange('username', val) }>用户名：</InputItem>\n            <InputItem type=\"password\" onChange={ val => this.handleChange('password', val) }>密码：</InputItem>\n            <InputItem type=\"password\" onChange={ val => this.handleChange('repassword', val) }>确认密码：</InputItem>\n            <List.Item>\n              <span>用户类型：</span>\n              <Radio checked={ type === '1' } onChange={ () => this.handleChange('type', '1') }>大神</Radio>\n              <Radio checked={ type === '2' } onChange={ () => this.handleChange('type', '2') } style={{'marginLeft': '15px'}}>老板</Radio>\n            </List.Item>\n          </List>\n          <WhiteSpace></WhiteSpace>\n          <Button type=\"primary\" onClick={this.submit}>注册</Button>\n          <WhiteSpace></WhiteSpace>\n          <Button onClick={this.toLogin}>已有账户</Button>\n        </WingBlank>\n      </div>\n    );\n  }\n}\n\nexport default Register\n","/**\n * Created by brady on 2019-06-22.\n */\n\nimport { FETCH_COUNTER } from \"../actionTypes\"\n\nconst defaultState = {\n  test: []\n}\n\nexport const counterReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case FETCH_COUNTER:\n      return {\n        ...state,\n        test: action.payload\n      }\n    default:\n      return state\n  }\n}\n","/**\n * Created by brady on 2019-06-22.\n */\n\nimport { combineReducers } from 'redux'\nimport { counterReducer } from './counterReducer'\n\nexport default combineReducers({\n  counterReducer\n})\n","/**\n * Created by brady on 2019-06-22.\n */\n\nexport const FETCH_COUNTER = 'FETCH_COUNTER'\n","/**\n * Created by brady on 2019-06-22.\n */\n\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducers from './reducers'\n\nconst defaultState = {}\nconst middleware = [thunk]\n\nexport const store = createStore(reducers, defaultState, composeWithDevTools(applyMiddleware(...middleware)))\n","/**\n * Created by brady on 2019-06-22.\n */\nimport React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport Main from '@/views/main/Main'\nimport Login from '@/views/login/Login'\nimport Register from '@/views/register/Register'\n\nimport { Provider } from 'react-redux'\nimport { store } from '../redux/store'\n\nconst AppRouter = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\" component={ Login }></Route>\n        <Route path=\"/register\" component={ Register }></Route>\n        <Route component={ Main }></Route>\n      </Switch>\n    </HashRouter>\n  </Provider>\n)\n\nexport default AppRouter\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from '@/router/index'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter/>, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}